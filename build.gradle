plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'PosWeb'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://jitpack.io' }
	/* iamport 문서들은 다 maven 기반으로 의존성을 추가하도록 되있지만
		기능 하나 추가하려고 프로젝트를 maven으로 바꿀 수 없으니 repositories에
		jitpack.io를 추가하면 gradle에서도 iamport 라이브러리를 추가할 수 있다.
	 */
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	// 하이버네이트 의존성 추가
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate6'
	// json 타입을 제대로 parse하기 위한 추가적인 parsing용 라이브러리
	implementation 'com.fasterxml.jackson.module:jackson-module-jakarta-xmlbind-annotations'
	// 결제 API iamport를 사용하기 위한 의존성 추가
	implementation 'com.github.iamport:iamport-rest-client-java:0.1.6'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'	// MySQL
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'junit:junit:4.12' // junit4 의존성 추가
}

tasks.named('test') {
	useJUnitPlatform()
}
